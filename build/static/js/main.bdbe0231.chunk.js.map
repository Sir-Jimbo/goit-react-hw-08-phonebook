{"version":3,"sources":["components/Navigation/Navigation.js","images/default-avatar.png","components/button/button.js","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.js","components/Header/Header.jsx","components/Layout/Layout.jsx","components/Section/Section.jsx","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.jsx","redux/phonebook/phonebook-reducers.js","redux/auth/auth-reducer.js","redux/store.js","index.jsx","redux/phonebook/phonebook-actions.js","redux/auth/auth-selectors.js","components/Spinner/Spinner.jsx","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/UserMenu/UserMenu.module.css","components/Header/Header.module.css","components/Section/Section.module.css"],"names":["connect","state","isAuthenticated","authSelectors","getIsAuthenticated","className","to","exact","activeClassName","useStyles","makeStyles","root","background","border","borderRadius","boxShadow","color","height","padding","ButtonMenu","onClick","classes","Button","mapDispatchToProps","onLogout","authOperations","logOut","name","getUsername","avatar","defaultAvatar","s","container","src","alt","width","AuthNav","Layout","children","Section","token","getToken","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","RegisterPage","LoginPage","PhoneBookPage","App","this","onGetCurrentUser","fallback","Spinner","path","getCurrentUser","initialState","contacts","createReducer","fetchContactSuccess","_","payload","addContactSuccess","deleteContactSuccess","filter","id","loading","fetchContactRequest","fetchContactError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","changeFilter","setError","error","clearError","combineReducers","initialUserState","email","user","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","registerError","loginError","logoutError","getCurrentUserError","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phonebook","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","document","getElementById","createAction","getError","getLoading","type","timeout","axios","defaults","baseURL","headers","common","Authorization","register","credential","dispatch","a","post","response","data","message","logIn","getState","persistedToken","get","module","exports"],"mappings":"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","file":"static/js/main.bdbe0231.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav className=\"nav\">\n    {!isAuthenticated &&\n      (<NavLink\n        to=\"/\"\n        exact\n        className=\"NavLink\"\n        activeClassName=\"NavLink--active\"\n      >\n        Home\n      </NavLink>\n      )}\n\n    {isAuthenticated &&\n      (<NavLink\n        to=\"/contacts\"\n        exact\n        className=\"NavLink\"\n        activeClassName=\"NavLink--active\"\n      >\n        Phonebook\n      </NavLink>\n      )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #f44336 30%, #f44336 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 36,\n    padding: '0 20px',\n  },\n});\n\nexport default function ButtonMenu({onClick}) {\n  const classes = useStyles();\n  return <Button onClick={onClick} className={classes.root}>Logout</Button>;\n}","import React from 'react';\nimport s from './UserMenu.module.css';\nimport { connect } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport authOperations from '../../redux/auth/auth-operations';\nimport defaultAvatar from '../../images/default-avatar.png';\nimport ButtonMenu from '../button/button';\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div className={s.container}>\n    <img src={avatar} alt=\"\" width=\"32\" className={s.avatar} />\n    <span className={s.name}>Welcome, {name}</span>\n    {/* My button\n    <button className={s.MenuButton} type=\"button\" onClick={onLogout}>\n      Logout\n    </button> */}\n\n    {/* Button from Material UI */}\n    <ButtonMenu onClick={onLogout} />\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      className=\"NavLink\"\n      activeClassName=\"NavLink--active\"\n    >\n      Sign up\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      className=\"NavLink\"\n      activeClassName=\"NavLink--active\"\n    >\n      Log in\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = ({ isAuthenticated }) => {\r\n   return (\r\n      <header className={s.container}>\r\n\r\n         <Navigation />\r\n         {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n      </header>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\nimport Header from '../Header/Header'\r\n\r\n\r\nconst Layout = ({ children }) => {\r\n   return (\r\n      <>\r\n         <Header />\r\n         <main>\r\n            {children}\r\n         </main>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport s from './Section.module.css';\r\n\r\n\r\nconst Section = ({ children }) => {\r\n   return (\r\n      <>\r\n         <section className={s.container}>\r\n            {children}\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Section;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  token,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      token ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  token: authSelectors.getToken(state)\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  token,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      token && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  token: authSelectors.getToken(state)\n});\n\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n//import { CSSTransition } from 'react-transition-group';\r\nimport Layout from 'components/Layout/Layout';\r\nimport Section from 'components/Section/Section';\r\nimport authOperations from './redux/auth/auth-operations';\r\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute/PublicRoute';\r\nimport Spinner from './components/Spinner/Spinner';\r\n//import s from './components/PhoneBook/PhoneBook.module.css';\r\n\r\nconst HomePage = lazy(() => import('./pages/HomePage/HomePage'));\r\nconst RegisterPage = lazy(() => import('./pages/RegisterPage/RegisterPage'));\r\nconst LoginPage = lazy(() => import('./pages/LoginPage/LoginPage'));\r\nconst PhoneBookPage = lazy(() => import('./pages/PhoneBookPage'));\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Section>\r\n          <Suspense fallback={<Spinner />}>\r\n            <Switch>\r\n              <PublicRoute\r\n                exact\r\n                path=\"/\"\r\n                restricted\r\n                redirectTo=\"/contacts\"\r\n                component={HomePage} />\r\n              <PublicRoute\r\n                path=\"/register\"\r\n                restricted\r\n                redirectTo=\"/contacts\"\r\n                component={RegisterPage} />\r\n              <PublicRoute\r\n                path=\"/login\"\r\n                restricted\r\n                redirectTo=\"/contacts\"\r\n                component={LoginPage} />\r\n              <PrivateRoute\r\n                path=\"/contacts\"\r\n                redirectTo=\"/login\"\r\n                component={PhoneBookPage}\r\n              />\r\n            </Switch>\r\n          </Suspense>\r\n        </Section>\r\n      </Layout >\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: authOperations.getCurrentUser\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App);","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n   fetchContactRequest,\r\n   fetchContactSuccess,\r\n   fetchContactError,\r\n   addContactRequest,\r\n   addContactSuccess,\r\n   addContactError,\r\n   deleteContactRequest,\r\n   deleteContactSuccess,\r\n   deleteContactError,\r\n   changeFilter,\r\n   clearError\r\n} from './phonebook-actions';\r\n\r\nconst initialState = {\r\n   contacts: [],\r\n   filter: '',\r\n   loading: false,\r\n   error: null,\r\n};\r\n\r\nconst contacts = createReducer(initialState.contacts, {\r\n   [fetchContactSuccess]: (_, { payload }) => payload,\r\n   [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n   [deleteContactSuccess]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(initialState.loading, {\r\n   [fetchContactRequest]: () => true,\r\n   [fetchContactSuccess]: () => false,\r\n   [fetchContactError]: () => false,\r\n   [addContactRequest]: () => true,\r\n   [addContactSuccess]: () => false,\r\n   [addContactError]: () => false,\r\n   [deleteContactRequest]: () => true,\r\n   [deleteContactSuccess]: () => false,\r\n   [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(initialState.filter, {\r\n   [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(initialState.error, {\r\n   [fetchContactError]: setError,\r\n   [addContactError]: setError,\r\n   [deleteContactError]: setError,\r\n   [clearError]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n   contacts,\r\n   filter,\r\n   loading,\r\n   error\r\n});","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = {\n    name: null,\n    email: null\n};\n\nconst user = createReducer(initialUserState, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\n    [authActions.logoutSuccess]: () => initialUserState,\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload\n});\n\nconst token = createReducer(null, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\n    [authActions.logoutSuccess]: () => null\n});\n\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n    [authActions.registerError]: setError,\n    [authActions.loginError]: setError,\n    [authActions.logoutError]: setError,\n    [authActions.getCurrentUserError]: setError,\n    [authActions.clearError]: () => null,\n});\n\nconst isAuthenticated = createReducer(false, {\n    [authActions.registerSuccess]: () => true,\n    [authActions.loginSuccess]:() => true,\n    [authActions.getCurrentUserSuccess]: () => true,\n    [authActions.registerError]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.logoutSuccess]: () => false\n});\n\nconst loading = createReducer(false, {\n    [authActions.registerSuccess]: () => false,\n    [authActions.registerRequest]: () => true,\n    [authActions.registerError]: () => false,\n    [authActions.loginSuccess]: () => false,\n    [authActions.loginRequest]: () => true,\n    [authActions.loginError]: () => false,\n    [authActions.logoutRequest]: () => true,\n    [authActions.logoutSuccess]: () => false,\n    [authActions.logoutError]: () => false,\n    [authActions.getCurrentUserRequest]: () => true,\n    [authActions.getCurrentUserSuccess]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.clearError]: () => false,\n});\n\nexport default combineReducers({\n    user,\n    isAuthenticated,\n    token,\n    loading,\n    error\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n//import logger from 'redux-logger';\r\nimport {\r\n   persistStore,\r\n   persistReducer,\r\n   FLUSH,\r\n   REHYDRATE,\r\n   PAUSE,\r\n   PERSIST,\r\n   PURGE,\r\n   REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from '../redux/phonebook/phonebook-reducers';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst middleware = [\r\n   ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n   }),\r\n   //logger\r\n];\r\n\r\nconst authPersistConfig = {\r\n   key: 'auth',\r\n   storage,\r\n   whitelist: ['token']\r\n};\r\n\r\nconst store = configureStore({\r\n   reducer: {\r\n      auth: persistReducer(authPersistConfig, authReducer),\r\n      phonebook: phonebookReducer\r\n   },\r\n   middleware,\r\n   devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport Spinner from './components/Spinner/Spinner';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n    <PersistGate\r\n      loading={<Spinner />}\r\n      persistor={store.persistor}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider >,\r\n  document.getElementById('root'),\r\n);\r\n","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport const clearError = createAction('contacts/clearError');","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getError = state => state.auth.error;\n\nconst getToken = state => state.auth.token;\n\nconst getLoading = state => state.auth.loading;\n\nconst authSelectors = {\n    getIsAuthenticated,\n    getUsername,\n    getError,\n    getToken,\n    getLoading\n};\n\nexport default authSelectors;","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Spinner = () => (\r\n   <Loader\r\n      type=\"TailSpin\"\r\n      color=\"blue\"\r\n      height={100}\r\n      width={100}\r\n      timeout={300}\r\n   />\r\n);\r\n\r\nexport default Spinner;","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credential => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credential);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credential => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/login', credential);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const { auth: { token: persistedToken }, } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n    //На случай если в локал сторедж остался какой-то токен чтобы его почистить\n    dispatch(authActions.logoutSuccess());\n  }\n};\n\nconst authOperations = {\n  register,\n  logIn,\n  logOut,\n  getCurrentUser\n};\n\nexport default authOperations;","import { createAction } from '@reduxjs/toolkit';\n\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerRequest = createAction('auth/registerRequest');\nconst registerError = createAction('auth/registerError');\n\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginRequest = createAction('auth/loginRequest');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst clearError = createAction('auth/clearError');\n\nconst authActions = {\n    registerSuccess,\n    registerRequest,\n    registerError,\n    loginSuccess,\n    loginRequest,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n    clearError\n};\n\nexport default authActions;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__kPG7D\",\"avatar\":\"UserMenu_avatar__2elQu\",\"name\":\"UserMenu_name__2Zq_a\",\"button\":\"UserMenu_button__3TXAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2yWxr\",\"appear\":\"Header_appear__2AbYt\",\"appearActive\":\"Header_appearActive__1f4O_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__4TNiU\"};"],"sourceRoot":""}